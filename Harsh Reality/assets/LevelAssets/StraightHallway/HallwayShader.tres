[gd_resource type="VisualShader" load_steps=11 format=2]

[ext_resource path="res://assets/LevelAssets/StraightHallway/HallwayBase Color.png" type="Texture" id=1]
[ext_resource path="res://assets/LevelAssets/StraightHallway/Normal_normal.png" type="Texture" id=2]
[ext_resource path="res://assets/LevelAssets/StraightHallway/HallwayEmission.png" type="Texture" id=3]

[sub_resource type="VisualShaderNodeTexture" id=1]
texture = ExtResource( 2 )

[sub_resource type="VisualShaderNodeTexture" id=2]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeTexture" id=3]
texture = ExtResource( 3 )

[sub_resource type="VisualShaderNodeVectorOp" id=4]
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id=5]
constant = Color( 1, 0.5625, 0, 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=6]
operator = 2

[sub_resource type="VisualShaderNodeScalarConstant" id=7]
constant = 10.0

[resource]
code = "shader_type spatial;
uniform sampler2D tex_frg_3;
uniform sampler2D tex_frg_4;
uniform sampler2D tex_frg_2;



void vertex() {
// Output:0

}

void fragment() {
// Texture:3
	vec4 tex_frg_3_read = texture(tex_frg_3, UV.xy);
	vec3 n_out3p0 = tex_frg_3_read.rgb;
	float n_out3p1 = tex_frg_3_read.a;

// Texture:4
	vec4 tex_frg_4_read = texture(tex_frg_4, UV.xy);
	vec3 n_out4p0 = tex_frg_4_read.rgb;
	float n_out4p1 = tex_frg_4_read.a;

// Color:6
	vec3 n_out6p0 = vec3(1.000000, 0.562500, 0.000000);
	float n_out6p1 = 1.000000;

// VectorOp:5
	vec3 n_out5p0 = n_out4p0 * n_out6p0;

// Scalar:8
	float n_out8p0 = 10.000000;

// VectorOp:7
	vec3 n_out7p0 = n_out5p0 * vec3(n_out8p0);

// Texture:2
	vec4 tex_frg_2_read = texture(tex_frg_2, UV.xy);
	vec3 n_out2p0 = tex_frg_2_read.rgb;
	float n_out2p1 = tex_frg_2_read.a;

// Output:0
	ALBEDO = n_out3p0;
	EMISSION = n_out7p0;
	NORMAL = n_out2p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -159, 111 )
nodes/fragment/0/position = Vector2( 600, 160 )
nodes/fragment/2/node = SubResource( 1 )
nodes/fragment/2/position = Vector2( -220, 480 )
nodes/fragment/3/node = SubResource( 2 )
nodes/fragment/3/position = Vector2( -180, 60 )
nodes/fragment/4/node = SubResource( 3 )
nodes/fragment/4/position = Vector2( -460, 220 )
nodes/fragment/5/node = SubResource( 4 )
nodes/fragment/5/position = Vector2( 20, 300 )
nodes/fragment/6/node = SubResource( 5 )
nodes/fragment/6/position = Vector2( -220, 380 )
nodes/fragment/7/node = SubResource( 6 )
nodes/fragment/7/position = Vector2( 320, 280 )
nodes/fragment/8/node = SubResource( 7 )
nodes/fragment/8/position = Vector2( 200, 420 )
nodes/fragment/connections = PoolIntArray( 2, 0, 0, 7, 3, 0, 0, 0, 4, 0, 5, 0, 6, 0, 5, 1, 5, 0, 7, 0, 7, 0, 0, 5, 8, 0, 7, 1 )
